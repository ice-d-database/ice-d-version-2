# Generated by Django 3.2.6 on 2022-03-16 20:35

from django.db import migrations

trigger_sql = """
-- We need to create a trigger on each nuclide table to update the updated_at field of the associated sample
CREATE TRIGGER _be10_sample_insert_trigger
  AFTER INSERT ON _be10_al26_quartz
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _c14_sample_insert_trigger
  AFTER INSERT ON _c14_quartz
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _cl36_sample_insert_trigger
  AFTER INSERT ON _cl36
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _he3_pxol_sample_insert_trigger
  AFTER INSERT ON _he3_pxol
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _he3_quartz_sample_insert_trigger
  AFTER INSERT ON _he3_quartz
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _major_element_sample_insert_trigger
  AFTER INSERT ON _major_element
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _ne21_sample_insert_trigger
  AFTER INSERT ON _ne21_quartz
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _trace_element_sample_insert_trigger
  AFTER INSERT ON _trace_element
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;

CREATE TRIGGER _u_th_sample_insert_trigger
  AFTER INSERT ON _u_th_quartz
  FOR EACH ROW
    UPDATE base_sample
      SET updated_at = now()
      WHERE base_sample.id = NEW.sample_id;
    
CREATE TRIGGER base_sample_insert_trigger
  BEFORE INSERT ON base_sample
  FOR EACH ROW
    SET NEW.updated_at = now();
    
update base_sample name
set name = trim(name)
where name like "% %";
"""


class Migration(migrations.Migration):
    dependencies = [
        ('base', '0005_auto_20220303_1341'),
    ]

    operations = [
        migrations.RunSQL(trigger_sql)
    ]